[shibinbin@node502 emaize]$ python
Python 2.7.12 |Anaconda 4.2.0 (64-bit)| (default, Jul  2 2016, 17:42:40)
[GCC 4.4.7 20120313 (Red Hat 4.4.7-1)] on linux2
Type "help", "copyright", "credits" or "license" for more information.
Anaconda is brought to you by Continuum Analytics.
Please check out: http://continuum.io/thanks and https://anaconda.org
>>> import numpy as np
>>> import pandas as pd
>>> emaize_data/phenotype/pheno_emaize.txt'
KeyboardInterrupt
>>> phenotypes = pd.read_table('emaize_data/phenotype/pheno_emaize.txt')
>>> phenotypes.shape
(6210, 6)
>>> f = open('data/genotype/chr1', 'rb')
>>> genotype = np.frombuffer(f.read(), dtype='int8')
>>> genotype = genotype.reshape((-1, 6210))
>>> genotype
array([[1, 1, 1, ..., 1, 1, 1],
       [0, 0, 0, ..., 0, 0, 0],
       [0, 0, 0, ..., 0, 0, 0],
       ...,
       [1, 1, 0, ..., 1, 1, 1],
       [0, 0, 1, ..., 0, 0, 0],
       [0, 0, 0, ..., 0, 0, 0]], dtype=int8)
>>> from sklearn.random_projection import GaussianRandomProjection
>>> proj = GaussianRandomProjection(32)
>>> proj.components_
>>> print proj.components_
None
>>> proj.fit(genotype)
GaussianRandomProjection(eps=0.1, n_components=32, random_state=None)
>>> print proj.components_
[[-0.04911895 -0.11538334  0.01523773 ..., -0.09717713  0.12294585
  -0.01758536]
 [ 0.17910357 -0.17736307 -0.17881406 ...,  0.20184373  0.20350133
  -0.16694341]
 [-0.0092066   0.07772043  0.00900931 ..., -0.13755476 -0.01537807
   0.0705121 ]
 ...,
 [-0.24956453 -0.05005732 -0.04318479 ...,  0.00598642 -0.09599552
   0.05846192]
 [-0.22949667  0.3511718  -0.15819399 ..., -0.12608366 -0.32013538
  -0.11306308]
 [-0.03007363 -0.0156199  -0.04114655 ..., -0.2216077   0.17229017
   0.09660359]]
>>> print proj.components_.shape
(32, 6210)
>>> X_proj = proj.transform(genotype)
>>> X_proj.shape
(862956, 32)
>>> X_proj
array([[ -1.62383881,  14.8165435 ,  12.42548864, ...,  19.23434407,
          8.60898031, -13.06799359],
       [  1.11677393,   1.97805043,  -3.18371   , ...,  -0.33199974,
          4.6066885 ,   4.86003251],
       [  0.        ,   0.        ,   0.        , ...,   0.        ,
          0.        ,   0.        ],
       ...,
       [ -4.82182889,  12.06046712,   8.03861572, ...,  20.67584721,
          5.32872085, -11.11387821],
       [  4.31476401,   4.73412681,   1.20316292, ...,  -1.77350288,
          7.88694796,   2.90591713],
       [  0.        ,   0.        ,   0.        , ...,   0.        ,
          0.        ,   0.        ]])
>>> X_proj = (X_proj > 0).astype('int32')
>>> X_proj
array([[0, 1, 1, ..., 1, 1, 0],
       [1, 1, 0, ..., 0, 1, 1],
       [0, 0, 0, ..., 0, 0, 0],
       ...,
       [0, 1, 1, ..., 1, 1, 0],
       [1, 1, 1, ..., 0, 1, 1],
       [0, 0, 0, ..., 0, 0, 0]], dtype=int32)
>>> b = 2**np.arange(32)
>>> b
array([         1,          2,          4,          8,         16,
               32,         64,        128,        256,        512,
             1024,       2048,       4096,       8192,      16384,
            32768,      65536,     131072,     262144,     524288,
          1048576,    2097152,    4194304,    8388608,   16777216,
         33554432,   67108864,  134217728,  268435456,  536870912,
       1073741824, 2147483648])
>>> X_hash = np.dot(X_proj, b)
>>> X_hash
array([2084497350, 3434114683,          0, ..., 2084366030, 3438758263,
                0])
>>> X_hash.shape
(862956,)
>>> X_proj = X_proj.astype('uint32')
>>> b = 2**np.arange(32, dtype='uint32')
>>> X_hash = np.dot(X_proj, b)
>>> X_hash
array([2084497350, 3434114683,          0, ..., 2084366030, 3438758263,
                0], dtype=uint32)
>>> np.unique(X_hash, return_counts=True)
(array([         0,       8147,      26191, ..., 4294937405, 4294952492,
       4294963696], dtype=uint32), array([194966,      1,      1, ...,      1,      1,      1]))
>>> np.argsort(X_hash)
array([862955, 553535, 553526, ..., 780430, 621962, 803495])
>>> zero_index = np.argsort(X_hash)
>>> X_hash[zero_index[:100]]
array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 0, 0, 0, 0], dtype=uint32)
>>> genotypes[zero_index[:10]]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'genotypes' is not defined
>>> genotype[zero_index[:10]]
array([[0, 0, 0, ..., 0, 0, 0],
       [0, 0, 0, ..., 0, 0, 0],
       [0, 0, 0, ..., 0, 0, 0],
       ...,
       [0, 0, 0, ..., 0, 0, 0],
       [0, 0, 0, ..., 0, 0, 0],
       [0, 0, 0, ..., 0, 0, 0]], dtype=int8)
>>> genotype[zero_index[:10]].sum(axis=1)
array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
>>> hash_val, hash_count = np.unique(X_hash, return_counts=True)
>>> np.sort(hash_count)
array([     1,      1,      1, ...,  14946,  22002, 194966])
>>> np.sort(-hash_count)
array([-194966,  -22002,  -14946, ...,      -1,      -1,      -1])
>>> np.sort(hash_count)[::-1]
array([194966,  22002,  14946, ...,      1,      1,      1])
>>> np.sort(hash_count)[::-1][:100]
array([194966,  22002,  14946,  11567,  10405,  10012,   9720,   7481,
         5550,   5387,   5382,   4937,   4333,   4156,   3897,   3828,
         3351,   3040,   2903,   2800,   2644,   2434,   2342,   2339,
         2240,   2179,   2069,   1888,   1826,   1800,   1682,   1625,
         1601,   1600,   1560,   1499,   1460,   1447,   1400,   1171,
         1167,   1165,   1144,   1059,   1045,   1039,   1000,    970,
          952,    938,    887,    836,    815,    809,    791,    770,
          739,    732,    722,    704,    701,    687,    674,    674,
          647,    642,    639,    622,    618,    614,    611,    607,
          583,    582,    574,    567,    565,    554,    546,    536,
          535,    533,    528,    518,    517,    514,    512,    492,
          488,    475,    475,    468,    452,    444,    434,    431,
          421,    408,    402,    401])
>>> np.sort(hash_count)[::-1][:1000]
array([194966,  22002,  14946,  11567,  10405,  10012,   9720,   7481,
         5550,   5387,   5382,   4937,   4333,   4156,   3897,   3828,
         3351,   3040,   2903,   2800,   2644,   2434,   2342,   2339,
         2240,   2179,   2069,   1888,   1826,   1800,   1682,   1625,
         1601,   1600,   1560,   1499,   1460,   1447,   1400,   1171,
         1167,   1165,   1144,   1059,   1045,   1039,   1000,    970,
          952,    938,    887,    836,    815,    809,    791,    770,
          739,    732,    722,    704,    701,    687,    674,    674,
          647,    642,    639,    622,    618,    614,    611,    607,
          583,    582,    574,    567,    565,    554,    546,    536,
          535,    533,    528,    518,    517,    514,    512,    492,
          488,    475,    475,    468,    452,    444,    434,    431,
          421,    408,    402,    401,    401,    401,    385,    383,
          377,    370,    369,    352,    350,    345,    328,    324,
          323,    321,    314,    313,    309,    308,    307,    307,
          302,    300,    297,    289,    286,    274,    272,    272,
          271,    269,    269,    266,    260,    259,    259,    258,
          256,    256,    255,    254,    253,    250,    247,    246,
          245,    244,    238,    237,    230,    228,    226,    221,
          221,    220,    219,    219,    216,    215,    215,    214,
          209,    208,    204,    202,    202,    200,    193,    192,
          192,    189,    188,    188,    187,    184,    183,    182,
          182,    181,    181,    181,    181,    180,    178,    176,
          176,    175,    175,    174,    173,    173,    172,    172,
          171,    171,    168,    167,    164,    158,    158,    158,
          157,    152,    151,    146,    144,    144,    144,    143,
          143,    140,    140,    140,    139,    139,    138,    137,
          137,    137,    136,    136,    136,    136,    134,    133,
          133,    131,    131,    130,    130,    129,    128,    127,
          126,    125,    125,    122,    119,    118,    117,    117,
          116,    115,    115,    114,    114,    114,    113,    112,
          112,    111,    111,    109,    105,    105,    105,    104,
          104,    103,    102,    102,    101,    100,    100,    100,
           99,     99,     99,     99,     99,     98,     97,     96,
           95,     95,     94,     93,     93,     93,     93,     93,
           93,     92,     91,     91,     90,     89,     88,     88,
           87,     87,     87,     87,     86,     86,     85,     85,
           84,     83,     83,     83,     83,     82,     82,     82,
           81,     81,     81,     81,     80,     79,     79,     79,
           79,     78,     78,     78,     78,     78,     78,     77,
           77,     77,     77,     76,     76,     76,     76,     76,
           75,     75,     75,     75,     74,     74,     74,     74,
           73,     73,     72,     72,     72,     71,     71,     71,
           71,     70,     70,     70,     70,     70,     69,     69,
           69,     69,     69,     68,     68,     68,     68,     68,
           67,     67,     67,     67,     66,     66,     65,     65,
           65,     64,     64,     64,     64,     63,     63,     62,
           62,     62,     61,     61,     61,     60,     60,     60,
           60,     59,     59,     59,     59,     59,     59,     58,
           58,     58,     58,     57,     57,     57,     57,     57,
           57,     57,     56,     56,     56,     56,     56,     55,
           55,     55,     55,     54,     54,     54,     54,     54,
           54,     54,     53,     53,     53,     53,     53,     53,
           53,     53,     52,     52,     52,     52,     52,     52,
           52,     52,     52,     51,     51,     50,     50,     50,
           50,     50,     50,     50,     49,     49,     49,     49,
           49,     49,     49,     49,     49,     49,     48,     48,
           48,     48,     48,     47,     47,     47,     47,     47,
           47,     47,     46,     46,     46,     46,     46,     45,
           45,     45,     45,     45,     45,     44,     44,     44,
           44,     44,     44,     43,     43,     43,     43,     43,
           43,     42,     42,     42,     42,     42,     42,     42,
           42,     41,     41,     41,     41,     41,     41,     41,
           41,     41,     40,     40,     40,     40,     40,     40,
           40,     40,     40,     40,     39,     39,     39,     39,
           39,     39,     39,     39,     39,     38,     38,     38,
           38,     38,     38,     38,     38,     38,     38,     38,
           38,     38,     37,     37,     37,     37,     37,     37,
           37,     37,     37,     37,     37,     36,     36,     36,
           36,     36,     36,     36,     36,     36,     36,     35,
           35,     35,     35,     35,     35,     35,     35,     35,
           35,     35,     35,     35,     35,     35,     35,     34,
           34,     34,     34,     34,     34,     34,     34,     34,
           34,     34,     34,     33,     33,     33,     33,     33,
           33,     33,     33,     33,     33,     32,     32,     32,
           32,     32,     32,     32,     32,     32,     32,     32,
           32,     32,     32,     32,     32,     32,     32,     32,
           32,     32,     31,     31,     31,     31,     31,     31,
           31,     31,     31,     31,     31,     31,     31,     31,
           31,     31,     30,     30,     30,     30,     30,     30,
           30,     30,     30,     30,     30,     30,     30,     30,
           30,     30,     30,     30,     30,     30,     29,     29,
           29,     29,     29,     29,     29,     29,     29,     29,
           29,     29,     29,     29,     29,     29,     29,     29,
           29,     28,     28,     28,     28,     28,     28,     28,
           28,     28,     28,     28,     28,     28,     28,     28,
           28,     28,     28,     28,     28,     28,     27,     27,
           27,     27,     27,     27,     27,     27,     27,     27,
           27,     27,     27,     27,     27,     27,     27,     27,
           27,     27,     27,     27,     27,     27,     27,     27,
           27,     27,     26,     26,     26,     26,     26,     26,
           26,     26,     26,     26,     26,     26,     26,     26,
           26,     26,     26,     26,     26,     26,     26,     26,
           26,     26,     26,     26,     26,     26,     26,     26,
           25,     25,     25,     25,     25,     25,     25,     25,
           25,     25,     25,     25,     25,     25,     25,     25,
           25,     25,     25,     25,     25,     25,     25,     25,
           25,     25,     25,     25,     25,     25,     25,     25,
           25,     24,     24,     24,     24,     24,     24,     24,
           24,     24,     24,     24,     24,     24,     24,     24,
           24,     24,     24,     24,     24,     24,     24,     24,
           24,     24,     24,     24,     24,     24,     24,     24,
           24,     24,     24,     24,     24,     23,     23,     23,
           23,     23,     23,     23,     23,     23,     23,     23,
           23,     23,     23,     23,     23,     23,     23,     23,
           23,     23,     23,     23,     22,     22,     22,     22,
           22,     22,     22,     22,     22,     22,     22,     22,
           22,     22,     22,     22,     22,     22,     22,     22,
           22,     22,     22,     22,     22,     22,     22,     22,
           22,     22,     22,     22,     22,     22,     22,     22,
           22,     22,     22,     21,     21,     21,     21,     21,
           21,     21,     21,     21,     21,     21,     21,     21,
           21,     21,     21,     21,     21,     21,     21,     21,
           21,     21,     21,     21,     21,     21,     21,     21,
           21,     21,     21,     21,     21,     21,     21,     21,
           21,     21,     21,     21,     20,     20,     20,     20,
           20,     20,     20,     20,     20,     20,     20,     20,
           20,     20,     20,     20,     20,     20,     20,     20,
           20,     20,     20,     20,     20,     20,     20,     20,
           20,     20,     20,     20,     20,     20,     20,     20,
           20,     20,     20,     20,     20,     20,     19,     19,
           19,     19,     19,     19,     19,     19,     19,     19,
           19,     19,     19,     19,     19,     19,     19,     19,
           19,     19,     19,     19,     19,     19,     19,     19,
           19,     19,     19,     19,     19,     19,     19,     19])
>>> np.argsort(X_hash)
array([862955, 553535, 553526, ..., 780430, 621962, 803495])
>>> np.sort(X_hash)
array([         0,          0,          0, ..., 4294937405, 4294952492,
       4294963696], dtype=uint32)
>>> hash_sorted = np.sort(X_hash)
>>> hash_sorted
array([         0,          0,          0, ..., 4294937405, 4294952492,
       4294963696], dtype=uint32)
>>> hash_sorted[:-1] - hash_sorted[1:]
array([         0,          0,          0, ..., 4294964372, 4294952209,
       4294956092], dtype=uint32)
>>> np.nonzero(hash_sorted[:-1] - hash_sorted[1:])
(array([194965, 194966, 194967, ..., 862952, 862953, 862954]),)
>>>